"" General

set nocompatible

" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %

" encoding
set enc =utf-8

" Colorscheme
colorscheme elflord

" get filename in statusbar
set laststatus=2
set statusline+=%F

" give us nice EOL (end of line) characters
set list
set listchars=tab:▸\ ,eol:¬

set title	" Set title of CMD
set number	" Show line numbers
set linebreak	" Break lines at word (requires Wrap lines)
set showbreak=+++ 	" Wrap-broken line prefix
set cursorline
"set textwidth=100	" Line wrap (number of cols)
set showmatch	" Highlight matching brace
set visualbell	" Use visual bell (no beeping)
set wildmenu	" show autocompletion in the menu

"" Search
set hlsearch	" Highlight all search results
set smartcase	" Enable smart-case search
""set ignorecase	" Always case-insensitive
set incsearch	" Searches for strings incrementally
 
set autoindent	" Auto-indent new lines
set shiftwidth=4	" Number of auto-indent spaces
set smartindent	" Enable smart-indent
set smarttab	" Enable smart-tabs
set expandtab    " Tab to space
set softtabstop=4	" Number of spaces per Tab
"set colorcolumn=74 " Red column


"" Syntax highlighing
syntax on

"" Misc
set ruler	" Show row and column ruler information
set undolevels=1000	" Number of undo levels
" set exrc " include further rc files
" set secure " disable some functions

"" Mappings
" <leader> key
let mapleader = ","
" Copy&Paste
set clipboard=unnamed
set pastetoggle=<F2>
" compile with gcc
map <F6> :! clear & gcc -g -o current % && ./current
map <F7> :! clear & gcc -std=c99 -g -Wall -o current % -lm && ./current
map <F8> :! clear & gcc -std=c99 -Wall -Wextra -pedantic-errors -o current % -lm && ./current
map <F5> :! clear & javac % && echo %\|awk -F. '{print $1}'\|xargs java 
" use links in help
map <F9> <C-T>
map <F10> <C-]>

"" Templates / Language specifics
autocmd BufRead,BufNewFile,FileReadPost *.py source ~/.vimrc.python
"remove trailing whitespaces
autocmd BufWritePre *.py :%s/\s\+$//e
" load templates
autocmd BufNewFile *.py 0r ~/git/repo/01_coden/python/dummy.py|3
autocmd BufNewFile *.c 0r ~/git/repo/01_coden/c/dummy.c
autocmd BufNewFile *.h 0r ~/git/repo/01_coden/c/dummy.h
autocmd BufNewFile,BufWritePre,FileWritePre *.[ch] ks|exe "1," . 5 . "g/file:.*/s//file: " .expand("%")|'s

"""" Replace modify date on writing file
"autocmd BufWritePre,FileWritePre *.[ch]   ks|call LastMod()|'s
"fun LastMod()
"  if line("$") > 20
"    let l = 20
"  else
"    let l = line("$")
"  endif
"  exe "1," . l . "g/Last modified: /s/Last modified: .*/Last modified: " strftime("%Y %b %d %X")
"endfun

" Tell vim to remember certain things when we exit
" "  '10  :  marks will be remembered for up to 10 previously edited files
" "  "100 :  will save up to 100 lines for each register
" "  :20  :  up to 20 lines of command-line history will be remembered
" "  %    :  saves and restores the buffer list
" "  n... :  where to save the viminfo files
set viminfo='10,\"100,:20,%,n~/.viminfo

"" Enable Pathogen plugin bundle manager
""execute pathogen#infect()
""filetype plugin indent on 

"" NerdTree 
""let NERDTreeIgnore=['\.pyc']
"autostart if no file given
""autocmd VimEnter * if !argc() | NERDTree | endif

"" Tex Hax
let g:tex_flavor='latex'

""close quotes automatically (delimitMate)
let delimitMate_expand_cr = 1
